<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Homepage</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
    <%  
        const units = user.unitsLeased;
        payments = units[0].payments; 
        let monthsPaid = payments[payments.length - 1].monthsPaid;
        let yearsPaid = payments[payments.length - 1].year;

        const now = new Date();
        const currentMonth = now.getMonth() + 1; // JavaScript months are 0-based
        const currentYear = now.getFullYear();

        let pendingMonths = 0;
        if (yearsPaid === currentYear) {
            pendingMonths = currentMonth - monthsPaid;
        } else if (yearsPaid < currentYear) {
            pendingMonths = (12 - monthsPaid) + (currentMonth) + (currentYear - yearsPaid - 1) * 12;
        } else {
            pendingMonths = 0; // Future year, should not happen
        }
        if (pendingMonths < 0) pendingMonths = 0;

        const phone = user.phone;
        const name = user.name;
        const rentPerMonth = user.monthlyRent;
    %>
<body class="bg-gray-100 flex flex-col items-center justify-center min-h-screen p-4">
    <div class="bg-white shadow-lg rounded-lg p-6 w-full max-w-md">
        <h1 class="text-3xl font-bold text-center text-gray-800 mb-4" id="welcome-message">Welcome to the Homepage</h1>
        <div class="text-gray-600 space-y-2">
            <p><span class="font-semibold" id="user-id-label">User ID:</span> <%= phone %></p>
            <p><span class="font-semibold" id="message-label">Welcome :</span> <%= user.name %></p>
            <div>
                <span class="font-semibold">Units Leased:</span>
                <ul class="list-none mt-4 space-y-6">
                    <% units.forEach(function(unit, idx) { %>
                        <li class="bg-gray-50 rounded-lg shadow p-4 border border-gray-200">
                            <div class="flex flex-col gap-2">
                                <div class="flex flex-wrap gap-4 items-center">
                                    <div>
                                        <span class="text-gray-700 font-medium">Unit Type:</span>
                                        <span class="text-gray-500"><%= unit.unitType || 'N/A' %></span>
                                        <span class="mx-2 text-gray-400">|</span>
                                        <span class="text-gray-700 font-medium">Size:</span>
                                        <span class="text-gray-500"><%= unit.size || 'N/A' %></span>
                                    </div>
                                    <div>
                                        <span class="text-gray-700 font-medium">Unit Name:</span>
                                        <span class="text-gray-500"><%= unit.id || unit.unitName || 'N/A' %></span>
                                    </div>
                                </div>
                                <div class="flex flex-wrap gap-4 items-center">
                                    <div>
                                        <span class="text-gray-700 font-medium" id="months-pending-label">Months Pending:</span>
                                        <span class="text-red-600 font-semibold">
                                            <% 
                                                let payments = unit.payments || [];
                                                let monthsPaid = payments.length ? payments[payments.length - 1].monthsPaid : 0;
                                                let yearsPaid = payments.length ? payments[payments.length - 1].year : 0;
                                                let now = new Date();
                                                let currentMonth = now.getMonth() + 1;
                                                let currentYear = now.getFullYear();
                                                let pendingMonths = 0;
                                                if (yearsPaid === currentYear) {
                                                    pendingMonths = currentMonth - monthsPaid;
                                                } else if (yearsPaid < currentYear) {
                                                    pendingMonths = (12 - monthsPaid) + (currentMonth) + (currentYear - yearsPaid - 1) * 12;
                                                } else {
                                                    pendingMonths = 0;
                                                }
                                                if (pendingMonths < 0) pendingMonths = 0;
                                            %>
                                            <%= pendingMonths %>
                                        </span>
                                    </div>
                                    <div>
                                        <span class="text-gray-700 font-medium" id="rent-per-month-label">Rent Per month:</span>
                                        <span class="text-indigo-600 font-semibold">₹<%= unit.monthlyRent %></span>
                                    </div>
                                </div>
                                <div class="mt-2">
                                    <span class="font-semibold text-gray-700" id="months-to-pay-label">Months you wish to Pay:</span>
                                    <div class="flex items-center gap-2 mt-1">
                                        <button type="button" class="bg-gray-200 px-3 py-1 rounded hover:bg-gray-300 transition" onclick="changeMonthsToPay(-1, this, <%= idx %>)">-</button>
                                        <input type="number" id="monthsToPay-<%= idx %>" class="border border-gray-300 rounded-md p-2 w-20 text-center focus:ring-2 focus:ring-indigo-400" min="1" max="<%= pendingMonths %>" value="1" data-monthly-rent="<%= unit.monthlyRent %>" oninput="validateMonthsToPay(this)" />
                                        <button type="button" class="bg-gray-200 px-3 py-1 rounded hover:bg-gray-300 transition" onclick="changeMonthsToPay(1, this, <%= idx %>)">+</button>
                                        <span class="ml-4 text-gray-600">You will pay: <span id="you-will-pay-<%= idx %>" class="font-semibold text-indigo-700"></span></span>
                                    </div>
                                </div>
                            </div>
                            <script>
                                function changeMonthsToPay(delta, btn, idx) {
                                    const input = document.getElementById('monthsToPay-' + idx);
                                    const output = document.getElementById('you-will-pay-' + idx);
                                    let value = parseInt(input.value) || 1;
                                    const min = parseInt(input.min) || 1;
                                    const max = parseInt(input.max) || 1;
                                    const monthlyRent = parseInt(input.getAttribute('data-monthly-rent')) || 0;
                                    value += delta;
                                    if (value < min) value = min;
                                    if (value > max) value = max;
                                    input.value = value;
                                    output.textContent = '₹' + (value * monthlyRent);
                                }
                                // Initialize the "You will pay" value on page load
                                document.addEventListener('DOMContentLoaded', function() {
                                    const input = document.getElementById('monthsToPay-<%= idx %>');
                                    const output = document.getElementById('you-will-pay-<%= idx %>');
                                    const monthlyRent = parseInt(input.getAttribute('data-monthly-rent')) || 0;
                                    output.textContent = '₹' + (parseInt(input.value) * monthlyRent);
                                });
                            </script>
                        </li>
                    <% }); %>
                </ul>
            </div>
        </div>
    </div> 

    <div class="bg-white shadow-lg rounded-lg p-6 w-full max-w-md mt-6">
        <form id="payment-form" class="space-y-4">
            <button type="button" onclick="payNow()" class="w-full bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2" id="pay-now-button">
                Pay Now
            </button>
        </form>
    </div>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        function totalToPay() {
            let amount = 0;
            for (let idx = 0; idx < <%= units.length %>; idx++) {
                const output = document.getElementById('you-will-pay-' + idx);
                if (output) {
                    const amt = parseInt(output.innerText.replace('₹', '').replace(/,/g, '')) || 0;
                    amount += amt;
                }
            }
            amount = amount * 100; // Convert to paise for Razorpay
            return amount;
        }

        async function payNow() {

            const amount = totalToPay();

            // Create order by calling the server endpoint
            const response = await fetch('/create-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ amount, currency: 'INR', receipt: 'receipt#1', notes: {} })
            });

            const order = await response.json();

            // Open Razorpay Checkout
            const options = {
                key: '<%= process.env.RAZORPAY_KEY_ID %>', // Replace with your Razorpay key_id from .env
                amount: amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                currency: 'INR',
                name: 'M V Narsimha Rao',
                description: 'Rent Payment by ' + name + ' to M V Narsimha Rao',
                order_id: order.id, // This is the order_id created in the backend
                // callback_url: '/payment-success',
                prefill: {
                    name: name,
                    email: '<%= user.email %>',
                    contact: '<%= user.phone %>'
                },
                theme: {
                    color: '#6366F1'
                },
            };

            const rzp = new Razorpay(options);
            rzp.open();
        }
    </script>
</body>
</html>
